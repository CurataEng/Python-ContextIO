#!/bin/sh

# This pre commit hook prompts the user to tag their latest commit with a version number.
# The version number should have the format vMAJOR.MINOR.PATCH (ie. v1.0.0)
  
exec < /dev/tty

function getVersion() {
  PREVIOUS_VERSION=$(git show-ref --tags | grep -o -e "v\([0-9]*.\)\{2\}[0-9]*" | tail -1)
  echo "Previous version: $PREVIOUS_VERSION"
  while true; do
    read -p "[pre-commit hook] Enter a version number for this commit: " VERSION
    # append `v` to version number if dev forgets =)
    if ! [[ $VERSION =~ ^v ]] ; then
      VERSION="v$VERSION"
    fi   
        
    if ! [[ $VERSION =~ ^v([0-9]+.){2}[0-9]+$ ]] ; then
      echo "Please enter a valid version number (i.e. v1.0.0)"    
      continue
    fi
    
    # check if version has already been used in a previous commit
    if git tag | grep -q $VERSION; then
      echo "Version has been used on another commit: $VERSION"
      continue
    fi
      
    if [ "$PREVIOUS_VERSION" == "$VERSION" ]; then
      echo "Please enter a different version number"
      echo "The latest tagged version number was $PREVIOUS_VERSION"
      continue
    fi
    
    echo $VERSION > .version
    
    # modify setup.py to include the new version
    sed -i -E "s/version='.*',/version='$VERSION',/" setup.py
    rm setup.py-E
    git add setup.py
    
    # all is well
    break
  done
}


while true; do
  read -p "[pre-commit hook] Would you like to tag this commit with a version? (y/n): " CREATE_VERSION
  
  if [ "$CREATE_VERSION" = "" ]; then
    CREATE_VERSION="Y"
  fi
  case $CREATE_VERSION in
      [Yy] ) getVersion; break;;
      [Nn] ) exit;;
      * ) echo "Please answer y or n for yes or no.";;
  esac
done
